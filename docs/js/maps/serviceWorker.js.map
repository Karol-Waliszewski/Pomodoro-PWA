{"version":3,"sources":["serviceWorker.js"],"names":["cacheName","filesToCache","self","e","console","log","addEventListener","open","then","cache","waitUntil","caches","keys","keyList","all","map","key","Promise","clients","claim"],"mappings":"YAAA,IAAIA,WAAY,gCACZC,cAAgB,IAAK,iBAAkB,gBAA3CC,MAAID,iBAAgB,UAAK,SAANE,GAGjBC,QAAQC,IAAI,2BADdH,EAAAA,UAAKI,OAALC,KAAsBP,WAAWQ,KAAA,SAAYC,GAEzCC,MADFN,SAAQC,IAAI,qCACVK,EAAUC,OAAOJ,mBAIpBL,KANDI,iBAAA,WAAA,SAAAH,GAgBK,MAPHC,SAAQC,IAAI,4BADdH,EAAAA,UAAKI,OAALM,OAAsBJ,KAAtB,SAAkCK,GAChCT,MAAQC,SAAIS,IAAAD,EAAAE,IAAA,SAAZC,GACEN,GAAAA,IAAUC,UAER,MADFP,SAAOa,IAAQH,qCAA8BE,GACvCA,OAAQhB,OAAWgB,SADzBd,KAAAgB,QAAAC","file":"../serviceWorker.js","sourcesContent":["var cacheName = 'PomodoroPWA-Karol-Waliszewski';\nvar filesToCache = ['/', '/css/style.css', '/js/script.js'];\n\nself.addEventListener('install', function(e) {\n  console.log('[ServiceWorker] Install');\n  e.waitUntil(caches.open(cacheName).then(function(cache) {\n    console.log('[ServiceWorker] Caching app shell');\n    return cache.addAll(filesToCache);\n  }));\n});\n\nself.addEventListener('activate', function(e) {\n  console.log('[ServiceWorker] Activate');\n  e.waitUntil(caches.keys().then(function(keyList) {\n    return Promise.all(keyList.map(function(key) {\n      if (key !== cacheName) {\n        console.log('[ServiceWorker] Removing old cache', key);\n        return caches.delete(key);\n      }\n    }));\n  }));\n  return self.clients.claim();\n});\n"]}